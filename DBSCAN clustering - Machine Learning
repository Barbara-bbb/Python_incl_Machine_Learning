# Open https://jupyter.org/try-jupyter/lab/ using Google Chrome. Open Notebook with Python.
# In a new file, copy-paste the following code and run it. Pls wait a few seconds to get the output.

# Problem description: DBSCAN clustering with noise (outliers) detection.

import numpy as np
import pandas as pd
from sklearn.cluster import DBSCAN
import matplotlib.pyplot as plt
%matplotlib inline

# Source data set
csv_path = 'data/iris.csv'
df = pd.read_csv(csv_path)
print(df.head())
print(df.tail())

# Defining feature data set / feature matrix, X. 
# Converting Pandas data frame to Numpy array to use library sckit-learn

X = df[['sepal_width', 'petal_width']].values.astype(float)
print(X[0:5])
print(X.shape)
print('X type:',type(X))

plt.figure(1)
plt.scatter(X[:,0], X[:,1])

# Normalize the data. Data Standardization with zero mean and unit variance (Z-score).
# from sklearn.preprocessing import StandardScaler
# X_norm = preprocessing.StandardScaler().fit(X).transform(X.astype(float))
# print(X_norm[0:5])

# DBSCAN Modeling
epsilon = 0.5
minSamples = 25
db = DBSCAN (eps = epsilon, min_samples = minSamples).fit(X)
labels = db.labels_
labels

# Plotting with detected number of standard clusters and noise cluster
plt.figure(2)
plt.scatter(X[: , 0], X[: , 1], 50, labels,  alpha = 0.5)

